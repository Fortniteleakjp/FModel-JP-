<adonisControls:AdonisWindow x:Class="FModel.Views.BackupManager"
                             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:converters="clr-namespace:FModel.Views.Resources.Converters"
                             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                             xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
                             xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                             WindowStartupLocation="CenterScreen"
                             ResizeMode="NoResize"
                             IconVisibility="Collapsed"
                             SizeToContent="Height"
                             Loaded="OnLoaded"
                             Width="{Binding Source={x:Static SystemParameters.MaximizedPrimaryScreenWidth}, Converter={converters:RatioConverter}, ConverterParameter='0.225'}">
    <adonisControls:AdonisWindow.Style>
        <Style TargetType="adonisControls:AdonisWindow"
               BasedOn="{StaticResource {x:Type adonisControls:AdonisWindow}}">
            <Setter Property="Title"
                    Value="Backup Manager" />
        </Style>
    </adonisControls:AdonisWindow.Style>
    <adonisControls:AdonisWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Resources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </adonisControls:AdonisWindow.Resources>
    <Grid Column="2"
          adonisExtensions:LayerExtension.Layer="2"
          Margin="10"
          Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Row="0"
                   Grid.Column="0"
                   Grid.ColumnSpan="3"
                   TextAlignment="Center"
                   TextWrapping="Wrap"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   FontSize="12">
            <Run>
                Backups capture the state of the game's packages at a specific moment, enabling you to track and compare changes over time.
            </Run>
            <LineBreak /><LineBreak />
            <Run FontWeight="Bold">Create Backup Lite:</Run>
            <Run>
                A fast, lightweight backup storing only essential metadata. It supports filtering assets by new or modified status but does not allow loading older game build for deeper comparison.
            </Run>
            <LineBreak /><LineBreak />
            <Run FontWeight="Bold">Create Backup Heavy:</Run>
            <Run>
                A full backup including all currently selected packages. This backup lets you load older game build alongside newer one, enabling detailed comparison of asset changes across versions. Although it requires more time and storage.
            </Run>
        </TextBlock>

        <Grid Grid.Row="2"
              Grid.Column="0"
              Grid.ColumnSpan="3"
              Margin="0,5,0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Click="OnCreateBackupClick"
                    Grid.Column="0"
                    Cursor="Hand"
                    Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                    Content="Create Lite Backup"
                    Margin="4,0"
                    Padding="10,5"
                    IsEnabled="{Binding IsCreatingBackup, Converter={x:Static converters:InvertBooleanConverter.Instance}}" />
            <Button Click="OnCreateBackupHeavyClick"
                    Grid.Column="1"
                    Cursor="Hand"
                    Style="{StaticResource OrangeAccentButton}"
                    Content="Create Heavy Backup"
                    Margin="4,0"
                    Padding="10,5"
                    Background="#FFF9A000"
                    IsEnabled="{Binding IsCreatingBackup, Converter={x:Static converters:InvertBooleanConverter.Instance}}" />
        </Grid>

        <Separator Grid.Row="3"
                   Grid.Column="0"
                   Grid.ColumnSpan="3"
                   Style="{StaticResource CustomSeparator}"
                   Tag="PRE-CREATED BACKUP FILES" />

        <TextBlock Grid.Row="4"
                   Grid.Column="0"
                   VerticalAlignment="Center"
                   Text="{Binding SelectedBackup.FileSize, Converter={x:Static converters:SizeToStringConverter.Instance}, FallbackValue='Backup', StringFormat={}Backup ({0})}" />
        <ComboBox Grid.Row="4"
                  Grid.Column="2"
                  ItemsSource="{Binding BackupsView}"
                  SelectedItem="{Binding SelectedBackup, Mode=TwoWay}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding FileName}"
                               TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.Style>
                <Style TargetType="ComboBox"
                       BasedOn="{StaticResource {x:Type ComboBox}}">
                    <Setter Property="IsEnabled"
                            Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding BackupsView.Count}"
                                     Value="0">
                            <Setter Property="IsEnabled"
                                    Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>
        <Button Grid.Row="6"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Content="Download"
                Click="OnDownloadClick">
            <Button.Style>
                <Style TargetType="Button"
                       BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="IsEnabled"
                            Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding BackupsView.Count}"
                                     Value="0">
                            <Setter Property="IsEnabled"
                                    Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</adonisControls:AdonisWindow>